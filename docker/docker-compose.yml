version: '3'
services:
    frontend:
        build:
            context: ..
            dockerfile: ./docker/nginx.DockerFile
        depends_on:
            - pin-writer
            - pin-reader
        ports:
            # NOTE only expose service frontend to outside world
            # https://docs.docker.com/compose/compose-file/#ports
            # https://docs.docker.com/compose/compose-file/#expose
            - '${PIN_HOST_ADDR}:${PIN_FRONTEND_SERVER_PORT}'
        networks:
            - pin-network
    pin-writer:
        build:
            # paths are relative to the location of compose file
            context: ..
            dockerfile: ./docker/writer.DockerFile # NOTE relative to the context root
            # depends_on:
            # NOTE docker only guarantee startup and termination order on container level, not on service level
            # TODO: db
        environment:
            - PIN_WRITER_VERBOSE
            - PIN_WRITER_SERVER_ADDR
            - PIN_TRAP_NAME
        ports:
            - '${PIN_WRITER_SERVER_PORT}'
        networks:
            - pin-network
    pin-reader:
        build:
            context: ..
            dockerfile: ./docker/reader.DockerFile
            # depends_on:
            # TODO: db
        environment:
            - PIN_READER_VERBOSE
            - PIN_READER_SERVER_ADDR
        ports:
            - '${PIN_READER_SERVER_PORT}'
        networks:
            - pin-network
              #    redis:
              #        image: redis:alpine
              #        volumes:
              #            # https://github.com/docker-library/redis/blob/b6d413ceff3a2bca10a430ace121597fa8fe2a2c/5.0/alpine/Dockerfile#L73
              #            - pin-cache-data:/data
              #        networks:
              #            - pin-network
              #        expose:
              #            - "${REDIS_PORT}"
              #        command:
              #            # https://github.com/docker-library/redis/blob/b6d413ceff3a2bca10a430ace121597fa8fe2a2c/5.0/alpine/Dockerfile#L80
              #            - redis-server
              #            - "--requirepass ${REDIS_PASSWD}"
              #            - "--port ${REDIS_PORT}"
              #            - "--timeout ${REDIS_IDLE_CLIENT_TIMEOUT_SECONDS}"
              #            - "--maxclients ${REDIS_MAX_CLIENTS}"
              #            - "--maxmemory ${REDIS_MAXMEM_BYTES}"
              #            - "--maxmemory-policy ${REDIS_MAXMEM_POLICY}"
networks:
    pin-network:
        #volumes:
